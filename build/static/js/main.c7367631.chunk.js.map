{"version":3,"sources":["pages/about.js","pages/navigation.js","pages/footer.js","components/project-link.js","components/tag-link.js","components/tag-list.js","components/project.js","pages/projects.js","components/note.js","pages/notes.js","utils/humanize-days.js","pages/tag.js","pages/project.js","pages/app.js","index.js"],"names":["About","react_default","a","createElement","href","className","navigation","id","Link","to","index_es","icon","faGithub","faLinkedin","footer","project_link","_ref","project","concat","label","title","tag_link","tag","tag_list","tagList","tags","map","t","reduce","out","push","key","slice","components_project","updatedAt","body","moment","fromNow","react_markdown_default","source","query","gql","_templateObject","Projects","react_apollo_browser_umd","loading","data","console","log","projects","components_note","note","createdAt","notes_templateObject","pages_notes","notes","metas","numProjects","length","numTags","times","startDate","days","Date","now","num","period","toFixed","humanizeDays","value","pages_tag","match","tag_templateObject","params","_ref2","Object","slicedToArray","pages_project","project_templateObject","noteList","App","Route","exact","path","component","Project","Tag","Notes","client","ApolloClient","uri","library","add","target","document","querySelector","render","BrowserRouter","app"],"mappings":"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","file":"static/js/main.c7367631.chunk.js","sourcesContent":["import React from 'react'\n\nconst About = () => (\n  <div>\n    <h2>About Me</h2>\n    <p>My name is Kyle Edwards. I am a senior full-stack software developer based out of Austin, TX, currently working for <a href=\"https://gospacecraft.com\">SpaceCraft</a> building out APIs, backend task queue systems, reporting tools, and marketing integrations with third-party services like Yext, Birdeye, and Google Search Console. Former employers include Disney Interactive, Thrillist, Heleo, and Spiceworks.</p>\n    <p>In my spare time, I make music and do production and editing for a fantastic podcast called <a href=\"https://www.holyswiftpodcast.com/\">Holy Swift</a>.</p>\n    <div className=\"columnSet\">\n      <div className=\"column\">\n        <p><strong>Fluent in:</strong></p>\n        <ul>\n          <li>Javascript</li>\n          <li>Node.js</li>\n          <li>CSS/SCSS</li>\n          <li>MySQL</li>\n          <li>PHP</li>\n        </ul>\n      </div>\n      <div className=\"column\">\n        <p><strong>Proficient in:</strong></p>\n        <ul>\n          <li>React/Redux</li>\n          <li>Docker</li>\n          <li>Kubernetes</li>\n          <li>CouchDB</li>\n          <li>Redis</li>\n          <li>Memcached</li>\n          <li>Google Cloud</li>\n          <li>AWS</li>\n        </ul>\n      </div>\n      <div className=\"column\">\n        <p><strong>Currently studying:</strong></p>\n        <ul>\n          <li>GraphQL</li>\n          <li>C++</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n)\n\nexport default About\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\n\nexport default () => (\n  <header>\n    <hgroup>\n      <h1 id=\"title\"><Link to=\"/\"><span id=\"glyph\">⎍</span>Kyle Edwards</Link></h1>\n    </hgroup>\n    <div className=\"nav\">\n      <h3>Personal Data</h3>\n      <ul>\n        <li><Link to=\"/projects\">Projects</Link></li>\n        <li><Link to=\"/notes\">Notes</Link></li>\n        <li><Link to=\"/tracking\">Time-tracking</Link></li>\n      </ul>\n    </div>\n    <div className=\"nav-social nav\">\n      <a href=\"https://github.com/kyleaedwards\">\n        <FontAwesomeIcon icon={faGithub} />\n      </a>\n      <a href=\"https://www.linkedin.com/in/kyle-edwards-2ba5a941/\">\n        <FontAwesomeIcon icon={faLinkedin} />\n      </a>\n    </div>\n  </header>\n)\n","import React from 'react'\n\nexport default () => (\n  <footer>\n    <div className=\"copyright\">\n      Copyright © 2018 Kyle Edwards\n    </div>\n  </footer>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default ({ project }) => (\n  <Link to={`/projects/${project.label}`}>{ project.title }</Link>\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default ({ tag }) => (\n  <Link to={`/tags/${tag}`}>{ tag }</Link>\n)\n","import React from 'react'\nimport TagLink from './tag-link'\n\nexport default ({ tags }) => {\n  const tagList = (tags || []).map(t => t.label)\n  return (\n    <div className=\"tag-list\">\n      {\n        tagList.reduce((out, tag) => {\n          out.push(<TagLink key={tag} tag={tag} />)\n          out.push(', ')\n          return out\n        }, []).slice(0, -1)\n      }\n    </div>\n  )\n}","import React from 'react'\nimport ProjectLink from './project-link'\nimport TagList from './tag-list'\nimport moment from 'moment'\nimport ReactMarkdown from 'react-markdown'\n\nexport default ({ project }) => {\n  const { label, tags, updatedAt, body } = project\n  return (\n    <div className=\"post\" key={label}>\n      <div className=\"post-meta\">\n        <h3><ProjectLink project={project} /></h3>\n        <div><TagList tags={tags} /></div>\n        <p className=\"post-timestamp\">Last updated: { moment(updatedAt).fromNow() }</p>\n      </div>\n      <div className=\"post-body\">\n        <ReactMarkdown source={body} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Project from '../components/project'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\n// const projects = [\n//   {\n//     title: 'Piezo Drum Trigger',\n//     label: 'piezo-drum-trigger',\n//     tags: ['arduino', 'c++', 'circuits', 'synth'],\n//     createdAt: '2018-10-11 11:24:13',\n//     updatedAt: '2018-10-27 15:12:50',\n//     body: [\n//       'Over the course of seven weeks, I\\'ll be taking'\n//     ]\n//   },\n//   {\n//     title: 'I2AAE',\n//     label: 'i2aae',\n//     tags: ['circuits', 'synth'],\n//     createdAt: '2018-10-11 11:24:13',\n//     updatedAt: '2018-10-27 15:12:50',\n//     body: [\n//       'Over the course of seven weeks, I\\'ll be taking'\n//     ]\n//   },\n//   {\n//     title: 'LFO',\n//     label: 'lfo',\n//     tags: ['js', 'react', 'redux', 'graphql'],\n//     createdAt: '2018-10-11 11:24:13',\n//     updatedAt: '2018-10-27 15:12:50',\n//     body: [\n//       'LFO is the front-end architecture for this site. The idea was to create a site to document long-term personal development using an adminless CMS in which all dynamic content was generated via a command line interface.'\n//     ]\n//   },\n//   {\n//     title: 'Transient (oio)',\n//     label: 'oio',\n//     tags: ['node', 'aws', 'lambda', 'mysql', 'cli'],\n//     createdAt: '2018-10-14 14:55:10',\n//     updatedAt: '2018-10-24 19:01:33',\n//     body: [\n//       'Transient (oio) is a CLI utility for note-taking, time-tracking, and interfacing with short-term personal data.',\n//       'Written in Node.js, uses AWS API Gateway to expose a suite of Lambda functions which store data in an Amazon RDS MySQL database.'\n//     ]\n//   },\n//   {\n//     title: 'Dumbledore',\n//     label: 'dumbledore',\n//     tags: ['node', 'github', 'cli'],\n//     createdAt: '2017-11-01 14:55:10',\n//     updatedAt: '2018-02-14 19:01:33',\n//     body: [\n//       'Dumbeldore is a CLI utility to assemble and share markdown knowledge bases.',\n//       'Knowledge bases are stored locally and optionally bidirectionally synced to a Github repository. Written in Node.js.'\n//     ]\n//   }\n// ]\n\nconst query = gql`\n  {\n    projects {\n      id\n      title\n      label\n      body\n      updatedAt\n      tags {\n        label\n      }\n    }\n  }\n`\n\nconst Projects = () => (\n  <Query query={query}>\n    {({ loading, data }) => {\n      console.log(data);\n      if (loading) {\n        return (\n          <div>\n            <h2>Projects</h2>\n            <div className=\"loading\">\n              Loading...\n            </div>\n          </div>\n        )\n      }\n      const { projects } = data\n      return (\n        <div>\n          <h2>Projects</h2>\n          <p className=\"expos\">A collection of current and past projects.</p>\n          <div className=\"posts\">\n            { projects.map(project => (<Project key={project.label} project={project} />)) }\n          </div>\n        </div>\n      )\n    }}\n  </Query>\n)\n\nexport default Projects\n","import React from 'react'\nimport ProjectLink from './project-link'\nimport TagList from './tag-list'\nimport moment from 'moment'\n\nexport default ({ note, key }) => (\n  <div className=\"post\" key={key}>\n    <div className=\"post-meta\">\n      <p className=\"post-category\"><ProjectLink project={note.project} /></p>\n      <p className=\"post-tags\"><TagList tags={note.tags} /></p>\n      <p className=\"post-timestamp\">{ moment(note.createdAt).fromNow() }</p>\n    </div>\n    <div className=\"post-body\">{ note.body }</div>\n  </div>\n)\n","import React from 'react'\nimport Note from '../components/note'\nimport humanizeDays from '../utils/humanize-days'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst query = gql`\n  {\n    notes(last: 5) {\n      id\n      body\n      createdAt\n      tags {\n        label\n      }\n      project {\n        title\n        label\n      }\n    }\n    projects {\n      id\n    }\n    tags {\n      id\n    }\n    metas(where: {\n      label: \"siteCreated\"\n    }) {\n      value\n    }\n  }\n`\n\nexport default () => (\n  <Query query={query}>\n    {({ loading, data }) => {\n      console.log(data);\n      if (loading) {\n        return (\n          <div>\n            <h2>Projects</h2>\n            <div className=\"loading\">\n              Loading...\n            </div>\n          </div>\n        )\n      }\n      const { notes, tags, projects, metas } = data\n      const numProjects = projects ? projects.length : 0\n      const numTags = tags ? tags.length : 0\n      const startDate = metas && metas[0] ? metas[0].value : Date.now()\n      const times = humanizeDays(startDate)\n      return (\n        <div>\n          <h2>Notebook</h2>\n          <p className=\"expos\">A collection of notes from the past <strong>{times}</strong>, spanning <strong>{numProjects}</strong> projects and <strong>{numTags}</strong> tags.</p>\n          <div className=\"posts\">\n            { notes.map((note, key) => (<Note note={note} key={key} />)) }\n          </div>\n        </div>\n      )\n    }}\n  </Query>\n)\n","export default startDate => {\n  const range = Date.now() - startDate\n  const days = range / (1000 * 60 * 60 * 24)\n  let num = days\n  let period = 'days'\n  if (days >= 365) {\n    num = days / 365.25\n    period = 'years'\n  } else if (days >= 31) {\n    num = days / 30.4375\n    period = 'months'\n  } else if (days >= 7) {\n    num = days / 7\n    period = 'weeks'\n  }\n  return `${num.toFixed(2)} ${period}`\n}\n","import React from 'react'\nimport Note from '../components/note'\nimport Project from '../components/project'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport default ({ match }) => {\n  const query = gql`\n    {\n      tags(where: {\n        label: \"${match.params.label}\"\n      }) {\n        label\n        notes(last: 5) {\n          body\n          createdAt\n          tags {\n            label\n          }\n          project {\n            title\n            label\n          }\n        }\n        projects {\n          title\n          label\n          body\n          updatedAt\n          tags {\n            label\n          }\n        }\n      }\n    }\n  `\n  const title = (<h2>{ match.params.label }</h2>)\n  return (\n    <Query query={query}>\n    {({ loading, data }) => {\n      console.log(data)\n      if (loading) {\n        return (\n          <div className=\"single tag-single\">\n            { title }\n            <div className=\"loading\">\n              Loading...\n            </div>\n          </div>\n        )\n      }\n      const { tags } = data;\n      const [tag] = tags;\n      if (!tag) {\n        return (\n          <div className=\"single tag-single\">\n            { title }\n            <p className=\"expos\">There are no notes or projects associated with this tag.</p>\n          </div>\n        )\n      }\n      const { projects, notes } = tag;\n      return (\n        <div className=\"single tag-single\">\n          { title }\n          <h3>Projects</h3>\n          <div className=\"posts\">\n            { projects.map((project, key) => (<Project project={project} key={key} />)) }\n          </div>\n          <h3>Latest Notes</h3>\n          <div className=\"posts\">\n            { notes.map((note, key) => (<Note note={note} key={key} />)) }\n          </div>\n        </div>\n      )\n    }}\n  </Query>)\n}\n","import React from 'react'\nimport Note from '../components/note'\nimport TagList from '../components/tag-list'\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport default ({ match }) => {\n  const query = gql`\n    {\n      projects(where: {\n        label: \"${match.params.label}\"\n      }) {\n        title\n        label\n        body\n        updatedAt\n        tags {\n          label\n        }\n      }\n    }\n  `\n  return (<Query query={query}>\n    {({ loading, data }) => {\n      console.log(data)\n      if (loading) {\n        return (\n          <div className=\"single project-single\">\n            <h2>Projects</h2>\n            <div className=\"loading\">\n              Loading...\n            </div>\n          </div>\n        )\n      }\n      const { projects } = data\n      const project = projects[0]\n      if (!project) {\n        return (\n          <div className=\"single project-single\">\n            <h2>Projects</h2>\n            <div className=\"loading\">\n              No project found with label {match.label}.\n            </div>\n          </div>\n        )\n      }\n      const { title, notes, tags, body } = project\n      const noteList = notes || []\n      return (\n        <div className=\"single project-single\">\n          <h2>{ title }</h2>\n          <div className=\"project-body\">\n            { body }\n          </div>\n          <div className=\"project-tags\">\n            <h3>Tags</h3>\n            <TagList tags={tags} />\n          </div>\n          <div className=\"project-notes\">\n            <h3>Notes</h3>\n            <div className=\"posts\">\n              { notes && notes.length ? noteList.map((note, key) => (<Note note={note} key={key} />)) : (\n                'No notes found.'\n              ) }\n            </div>\n          </div>\n        </div>\n      )\n    }}\n  </Query>)\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport About from './about'\nimport Navigation from './navigation'\nimport Footer from './footer'\nimport Projects from './projects'\nimport Notes from './notes'\nimport Tag from './tag'\nimport Project from './project'\n\nconst App = () => (\n  <div>\n    <Navigation />\n\n    <main>\n      <Route exact path=\"/\" component={About} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route path=\"/projects/:label\" component={Project} />\n      <Route path=\"/tags/:label\" component={Tag} />\n      <Route exact path=\"/notes\" component={Notes} />\n    </main>\n\n    <Footer />\n  </div>\n)\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './pages/app'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons'\nimport 'cross-fetch/polyfill'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport 'sanitize.css/sanitize.css'\nimport './index.scss'\n\nconst client = new ApolloClient({\n  uri: 'https://api-useast.graphcms.com/v1/cjo1rges03kfc01dgxh2f5ogy/master'\n})\n\nlibrary.add(faLinkedin)\nlibrary.add(faGithub)\n\nconst target = document.querySelector('#root')\n\nrender(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <div>\n        <App />\n      </div>\n    </ApolloProvider>\n  </BrowserRouter>,\n  target\n)"],"sourceRoot":""}